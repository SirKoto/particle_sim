
#ifdef __cplusplus
    #pragma once
    #define VEC3 glm::vec3
    #define ALIGN(a) alignas(a)
    namespace particle {
#else
    #define uint32_t uint
    #define VEC3 vec3
    #define ALIGN(a)
#endif

struct ParticleSystemConfig {
    uint32_t max_particles;
    float gravity;
    float particle_size;
    float simulation_space_size;

    float k_v;
    float bounce;
    float friction;
    float padding;
};

struct Particle {
    ALIGN(16) VEC3 pos;
    float lifetime;
};

struct ParticleSpawnerConfig {
    ALIGN(16) VEC3 pos;
    float mean_lifetime;
    float var_lifetime;
    float particle_speed;
};

#define BINDING_SYSTEM_CONFIG 0
#define BINDING_PARTICLES_IN 1
#define BINDING_PARTICLES_OUT 2
#define BINDING_ALIVE_LIST_IN 3
#define BINDING_ALIVE_LIST_OUT 4
#define BINDING_DEAD_LIST 5
#define BINDING_SHAPE_SPHERE 6
#define BINDING_MESH_VERTICES 7
#define BINDING_MESH_NORMALS 8
#define BINDING_MESH_INDICES 9

#define BINDING_ATOMIC_ALIVE_IN 0
#define BINDING_ATOMIC_ALIVE_OUT 1
#define BINDING_ATOMIC_DEAD 2



#ifdef __cplusplus
    }; // namespace particle
    #undef VEC3
    #undef ALIGN
#else
    #undef uint32_t
    #undef VEC3
    #undef ALIGN
#endif
